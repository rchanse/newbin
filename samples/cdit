#!/bin/bash 	
# IMPORTANT  this is fall through exec  because it must be activated by .
# this mean you stay in the same shell and the use if exit closes the window
# for this reason the code in kind of goofy
# the variable found  is need to determine whether to produce the last msg
# also cannot use $0 this becomes bash

# quick goback to previous pw  (made typo)
if [ "$1" == "old" ]; then
   echo returning to $OLDPWD
   cd $OLDPWD
fi

function gocdit
 {
   if [ $2 == "show" ]; then  # if part just lists the acro / file
      echo $3 $4 
   else
      if [ "$1" == "$3" ]; then        # go find the acroo
	 echo "change to "$4     
         cd  $4   
	 pwd
	 found="yes"
      else
         return
      fi
   fi
 }
# end of function godo
 
found="nope"
#  first make sure there is a parm
if [ "$1" == "" ] ; then
  found="yes"
  echo "You must enter a value  ( '. show' - to list,  - to edit )"
fi
# special case to edit the list of acronyms
if [ "$1" == "-" ] ; then 
  echo " editing the $0 file itself "
  vim ~/bin/cdit        # <<<-- this much change  org was cd0
  set found="yes"
fi

# set the second parm and make certain only certain one are used

if [ "$2" == "" ]; then
   action="cd"
elif [ "$2" == "show" ]; then
   action="show"
   found="yes"
else
   echo "need proper action in parm 2 - null  or show"
   found="yes"     # kill end  not found mismessage
fi

#  godo $1 $action    
gocdit $1 $action 21    ~/blp/test/21days
gocdit $1 $action 31    ~/blp/test/31days
gocdit $1 $action apache   /etc/apache2
gocdit $1 $action apachedoc /usr/share/doc/apache2
gocdit $1 $action bin        ~/bin
gocdit $1 $action bin12      ~/bin12oct16
gocdit $1 $action binlocal   ~/.local/bin
gocdit $1 $action binl       ~/.local/bin
gocdit $1 $action bingit     ~/bingit
gocdit $1 $action blp        ~/blp
gocdit $1 $action divepy0 /home/$USER/python/dive/dive/diveintopython-5.4/py
gocdit $1 $action down   ~/Downloads
gocdit $1 $action fullcircle ~/python/fullcircle
gocdit $1 $action learngit   ~/testing/learngit
gocdit $1 $action handson   ~/python/handson/examples
gocdit $1 $action myp     ~/git-projects/my_project  
gocdit $1 $action batp     ~/git-projects/batch_project  
gocdit $1 $action netwk     ~/python/netwking
gocdit $1 $action phpcode   ~/programming/lamp/examples
gocdit $1 $action python    ~/python
gocdit $1 $action pybooks   ~/python/books
gocdit $1 $action py27       /usr/lib/python2.7
gocdit $1 $action py34       /usr/lib/python3.4
gocdit $1 $action pyoop    /home/rchansen/pythonrch/oop  
gocdit $1 $action pybook  /home/rchansen/pythonrch/thepythonbook
gocdit $1 $action pyv5    /home/rchansen/pythonrch/learnv5 
gocdit $1 $action vimcolor  ~/.vim/colors
gocdit $1 $action working   ~/python/zelle/$USER
gocdit $1 $action tcs       ~/python/thinkCSpy
gocdit $1 $action tip       ~/python/books/ThinkInPython/rchcode
gocdit $1 $action tk        /usr/lib/python2.7/lib-tk
gocdit $1 $action tn         ~/tn
gocdit $1 $action zelle0    ~/python/zelle
gocdit $1 $action zelle    ~/python/zelle/$USER
gocdit $1 $action zpymine   ~/python/zelle/$USER
gocdit $1 $action zpyweb    ~/python/zelle/fromweb
gocdit $1 $action zpynow    ~/python/zelle/fromweb/chapter10
gocdit $1 $action zv4       ~/python/zelle/learning.v4
gocdit $1 $action zv4rch    ~/python/zelle/learning.v4/LP4E-rch
#  cd /home/rchansen/Downloads/hp_printing/hplip-3.14.6


# fall through to message that cd path not found 
#echo $found "found"
if [ $found  == "yes" ]; then
  dummy="None"
else
   if [ "$1" != "old" ]; then   # suppress due to $OLDPWD
     echo $1 "not found as an cd path "
   else
     dummy="None"
   fi
fi



